@page "/register"
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-6">
            <h3>Register</h3>

            <form @onsubmit="register">
                <div class="form-group">
                    <label for="email">Email:</label>
                    <input type="email" id="email" @bind="email" class="form-control" />
                </div>
                @if (!emailVer)
                {
                    <p style="color: red;">Email is already taken</p>
                }

                <div class="form-group">
                    <label for="username">Username:</label>
                    <input type="text" id="username" @bind="username" class="form-control" />
                </div>
                @if (!usernameVer)
                {
                    <p style="color: red;">Username is already taken</p>
                }

                <div class="form-group">
                    <label for="password">Password:</label>
                    <input type="password" id="password" @bind="password" class="form-control" />
                </div>

                @if (!registration)
                {
                    <p style="color: red;">Registration failed. Problem with connecting to database.</p>
                }


                <button type="submit" class="btn btn-primary">Register</button>
            </form>

        </div>
    </div>
</div>

@code {
    private bool registration = true;
    private bool emailVer = true;
    private bool usernameVer = true;
    private string email;
    private string username;
    private string password;

    private async void register()
    {
        emailVer = await AuthService.checkEmail(email);
        if (emailVer){
            usernameVer = await AuthService.checkUsername(username);
            if (usernameVer){
                registration = await AuthService.Register(email,username,password);
                if (registration){NavigationManager.NavigateTo("/shirts");}
            }
        }
    }
}
